/*
* Copyright (c) 2016, Sascar
* All rights reserved.
*
* THIS SOFTWARE IS PROVIDED BY SASCAR ''AS IS'' AND ANY
* EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
* DISCLAIMED. IN NO EVENT SHALL SASCAR BE LIABLE FOR ANY
* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
* SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#ifndef IEVENTRESOURCELOADERLISTENER_HPP
#define IEVENTRESOURCELOADERLISTENER_HPP

#include "interface/IEventListener.hpp"

namespace Sascar {

class EventResourceLoader;

/// Resource loader event listener
class IEventResourceLoaderListener : public IEventListener
{
	public:
		IEventResourceLoaderListener() = default;
		~IEventResourceLoaderListener() {}

		virtual void OnGroupLoaded(const EventResourceLoader *ev)	I9_PURE_VIRTUAL_EVENT
		virtual void OnQueueEmpty(const EventResourceLoader *ev)	I9_PURE_VIRTUAL_EVENT
};

} // namespace

#endif // IEVENTRESOURCELOADERLISTENER_HPP
